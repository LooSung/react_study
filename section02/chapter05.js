// 원시타입 -> 값 자체로써 변수에 저장되고 복사된다.
// 불면 값이다 (메모리 값을 수정하지 않는다.)

// 객체타입 -> 참조값을 통해 변수에 저장되고 복사된다.
// 가변 값이다 (메모리 값을 수정한다.)

// 객체 타입 주의사항
// 1. 의도치 않게 값이 수정 될 수 있다.
let o1 = { name: "test" };
let o2 = o1; // 얕은 복사
o2.name = "test2"; // 얕은 복사를 하면 변경됨과 함께 o1에 값도 수정 될 수 있다.

let o3 = { ...o1 }; // 깊은 복사
o3.name = "test3"; // 깊은 복사를 통해 안전하게 변경 해야한다.

// 2. 객체간의 비교는 기본적으로 참조한 값을 기준으로 이뤄진다.
let t1 = { name: "test" };
let t2 = o1; // 얕은 복사
t2.name = "test2"; // t2는 t1의 값을 참조하게된다.

let t3 = { ...o1 }; // 깊은 복사
t3.name = "test3"; // t3는 객체를 새로 생성해서 t3 만의 값을 갖는다.

// 얕은 비교, 깊은 비교
o1 === o2;
JSON.stringify(o1) === JSON.stringify(o2);
